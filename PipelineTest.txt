node {
   def mvnHome
   def projName = params.ProjectName//'Jacoco'
   def gitRepo = params.GitRepoName
   stage('Preparation') { // for display purposes
      // Get some code from a GitHub repository
      git gitRepo
      // Get the Maven tool.
      // ** NOTE: This 'M3' Maven tool must be configured
      // **       in the global configuration.           
      mvnHome = tool 'M3'
   }
   stage('Build') {
      // Run the maven build
      if (isUnix()) {
         sh "'${mvnHome}/bin/mvn' -Dmaven.test.failure.ignore clean package"
      } else {
         bat(/"${mvnHome}\bin\mvn" -Dmaven.test.failure.ignore -f ${projName}\pom.xml clean install/)
      }
   }
   stage('SonarQube analysis') {
    ws("C:\\Users\\168822\\.jenkins\\workspace\\PipelineTest\\${projName}") {
    // requires SonarQube Scanner 2.8+
    def scannerHome = tool 'SONARSCANNER';
    withSonarQubeEnv('SONARQUBE 7.2') {
      bat "${scannerHome}/bin/sonar-runner.bat -Dsonar.projectName=${projName} -Dsonar.projectVersion=1.9 -Dsonar.projectKey=${projName} -Dsonar.sources=C:\\Users\\168822\\.jenkins\\workspace\\PipelineTest\\${projName}\\src\\main\\java -Dsonar.java.binaries=C:\\Users\\168822\\.jenkins\\workspace\\PipelineTest\\${projName}\\target\\classes -Dsonar.language=java"
      
    }
  }
}
/*stage("SonarQube Quality Gate") { 
    timeout(time: 3, unit: 'MINUTES') { 
           def qg = waitForQualityGate() 
           if (qg.status != 'OK') {
              error "Pipeline aborted due to quality gate failure: ${qg.status}"
           }
         }
     }*/
   stage('Results') {
      junit '**/target/surefire-reports/TEST-*.xml'
      archive 'target/*.jar'
     // cobertura autoUpdateHealth: false, autoUpdateStability: false, coberturaReportFile: '**/target/site/cobertura/coverage.xml', conditionalCoverageTargets: '70, 0, 0', failUnhealthy: false, failUnstable: false, lineCoverageTargets: '80, 0, 0', maxNumberOfBuilds: 0, methodCoverageTargets: '80, 0, 0', onlyStable: false, sourceEncoding: 'ASCII', zoomCoverageChart: false

   }
    
}